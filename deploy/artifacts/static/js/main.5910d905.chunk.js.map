{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","modules/Base/Alert/alert-reducer.ts","modules/Base/Alert/AlertContext.tsx","modules/Base/Alert/Alerts.tsx","modules/Base/Dashboard/DashButton.tsx","style/main.ts","modules/Base/PageTitle/PageTitle.tsx","modules/Base/Loader/style.ts","modules/Base/Loader/Loader.tsx","modules/Base/Errors/ErrorAlert.tsx","utils/main.ts","config/index.ts","utils/token.ts","modules/Base/Dashboard/Dashboard.tsx","modules/Base/ContentContainer/ContentContainer.tsx","modules/Dips/ImportDataLink.tsx","modules/Base/StationSelector/StationSelector.tsx","modules/Dips/queries.js","modules/Dips/types.ts","modules/Dips/utils.ts","modules/Dips/useDips.ts","modules/Dips/DipOvershort.tsx","modules/Dips/DipsForm.tsx","modules/Dips/Dips.tsx","modules/Base/Header/style.ts","modules/Base/User/UserContext.tsx","modules/Base/Header/Header.tsx","modules/Import/Import.tsx","modules/Base/NoMatch/NoMatch.tsx","modules/Propane/Propane.tsx","modules/Reports/Reports.tsx","config/aws-exports.ts","apollo.ts","style/theme.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","CLEAR","DISMISS","SEND","alertReducer","state","action","type","payload","setTimeout","nanoid","filter","alert","AlertStateContext","React","createContext","undefined","AlertDispatchContext","AlertProvider","children","userHandler","useReducer","dispatch","send","useCallback","timeout","dismiss","clear","alerts","useAlert","Provider","value","useAlertDispatch","context","useContext","useStyles","makeStyles","theme","createStyles","root","alignItems","display","flexDirection","margin","position","top","width","zIndex","marginTop","spacing","actionItem","Alerts","useAlertState","classes","Alert","props","className","elevation","variant","IconButton","aria-label","color","size","onClick","fontSize","length","c","severity","title","AlertTitle","message","DashButton","label","path","Grid","item","Button","component","Link","to","flex","mainContainer","titleLink","textDecoration","paper","minHeight","padding","popperClose","pointerEvents","PageTitle","Typography","gutterBottom","Divider","light","container","progress","Loader","data-testid","CircularProgress","paddingTop","errorTxt","fontWeight","ErrorAlert","error","fmtNumber","number","opts","currency","style","formatter","Intl","NumberFormat","format","getEnv","nodeEnv","process","window","location","hostname","indexOf","getTitle","mainTitle","localURI","config","development","BASE_URL","production","stage","test","LOCAL_TOKEN_KEY","HUMAN_DATE_FORMAT","getSession","cognitoUser","reject","err","session","refreshSession","refreshToken","getRefreshToken","refSession","parseLocalToken","localToken","localStorage","getItem","JSON","parse","atob","split","getToken","a","storage","now","Math","floor","Date","valueOf","cutoffTime","tokenObj","exp","poolData","UserPoolId","ClientId","userPool","CognitoUserPool","getCurrentUser","rSession","userToken","accessToken","jwtToken","console","log","menuItems","GET_STATIONS","gql","Dashboard","useQuery","loading","DevWarnMsg","Paper","m","ContentContainer","withStyles","ImportDataLink","date","fmtDte","selectEmpty","StationSelector","stationHandler","stationID","useParams","data","useState","station","setStation","useEffect","InputLabel","Select","labelId","onChange","event","stnID","target","stations","s","MenuItem","name","FuelTypes","DIP_QUERY","STATION_INFO","tmpTank","delivery","dips","level","litres","prevDips","prevLevel","tankID","SET_CURRENT_QKEY","SET_DATE","SET_DIPS_DATA","SET_ERROR","SET_FUELSALE_DATE","SET_LOADING","SET_STATIONID","SET_HAVE_CURRENT_DIPS","dipsReducer","fuelSaleDate","dipTankData","haveCurrentDips","currentQKey","initialState","useDips","useLazyQuery","getTanks","tanksError","tanksLoading","stationData","getDips","dipsError","dipsLoading","dipsData","setDate","setStationID","variables","fsDate","fuelSaleLatest","toString","isAfter","dte","dteStr","dteNo","Number","stateQKey","dateFrom","subDays","dateTo","findDate","os","dipOverShortRange","find","ele","stationTanks","dipData","dipTanks","tanks","curDips","tanksObj","Map","values","ft","i","t","fuelType","tmp","assign","tmpDip","stationTankID","tank","fuelDelivery","tmpPrevDip","set","populateTanks","overshort","fuelPrice","fuelPriceRow","negative","palette","primary","main","DipOvershort","displayDate","fts","oss","overShort","rows","push","price","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","tankLitres","litresSold","classNames","maxWidth","input","table","DipsForm","tankData","osData","dataKeys","Array","from","xs","autoComplete","k","get","TextField","autoFocus","navButton","navIcon","navControl","formControl","minWidth","textField","marginLeft","marginRight","Dips","history","useHistory","alertDispatch","nextDisabled","setNextDisabled","pDate","pStationID","handleNextPrevDate","val","addDays","utcToZonedTime","selectDteFmt","todayFmt","handleSetNextDisable","uri","FormControl","autoOk","disableFuture","Icon","disabled","flexGrow","fontFamily","typography","menuButton","userMenu","textAlign","UserStateContext","UserDispatchContext","UserProvider","user","setUser","useUserDispatch","Header","useLocation","selectedIndex","pathname","mainMenuEl","setMainMenuEl","userMenuEl","setUserMenuEl","useUserState","handleNavigate","userDispatch","handleLogout","Auth","signOut","global","AppBar","Toolbar","aria-haspopup","edge","currentTarget","Menu","anchorEl","getContentAnchorEl","keepMounted","onClose","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","selected","AccountCircle","Import","NoMatch","Propane","setOpen","handleClose","reason","Snackbar","autoHideDuration","Reports","awsExports","region","userPoolId","userPoolWebClientId","authLink","setContext","_","headers","token","errString","response","Authorization","errorLink","onError","graphQLErrors","networkError","locations","httpLink","createHttpLink","link","client","ApolloClient","cache","InMemoryCache","createMuiTheme","red","dark","secondary","grey","contrastThreshold","tonalOffset","join","useNextVariants","htmlFontSize","responsiveFontSizes","Amplify","configure","App","authState","setAuthState","authData","setAuthData","onAuthUIStateChange","nextAuthState","username","USER","attributes","email","isLoggedIn","setItem","signInUserSession","setToken","AuthState","SignedIn","Helmet","ThemeProvider","FallbackComponent","utils","DateFnsUtils","exact","borderRadius","slot","hideSignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5910d905.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t558,\n\t\t16\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t559,\n\t\t17\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t560,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t561,\n\t\t18\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t562,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t563,\n\t\t19\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t564,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t565,\n\t\t20\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t566,\n\t\t21\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t567,\n\t\t22\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t568,\n\t\t23\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t569,\n\t\t24\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t570,\n\t\t25\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t571,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t572,\n\t\t26\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t573,\n\t\t27\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t574,\n\t\t28\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t575,\n\t\t29\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t576,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t577,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t578,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t579,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t580,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t581,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t582,\n\t\t30\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t583,\n\t\t14\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t584,\n\t\t31\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t585,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 549;\nmodule.exports = webpackAsyncContext;","/**\n * Alert Reducer\n *\n * Got most of this from link below\n * @see https://kentcdodds.com/blog/how-to-test-custom-react-hooks?ck_subscriber_id=635632627\n */\n\nimport React from 'react'\n\nimport { nanoid } from 'nanoid'\n\nconst CLEAR = 'CLEAR'\nconst DISMISS = 'DISMISS'\nconst SEND = 'SEND'\n\nconst DefaultTimeout = 4000\n\nexport type Color = 'success' | 'info' | 'warning' | 'error'\n\nexport type AlertItem = {\n  id?: string\n  setTimeout?: boolean\n  message: string\n  severity?: Color\n  timeout?: number\n  title?: string\n}\n\nexport type AlertState = AlertItem[]\n\nexport type Action =\n  | {\n      type: 'SEND'\n      payload: AlertItem\n    }\n  | {\n      type: 'DISMISS'\n      payload: string\n    }\n  | {\n      type: 'CLEAR'\n    }\n\nexport type AlertT = {\n  alerts: AlertItem[]\n  clear: () => void\n  dismiss: (id: string) => void\n  send: (alert: AlertItem) => void\n}\n\nconst alertReducer = (state: AlertState, action: Action): AlertState => {\n  switch (action.type) {\n    case SEND: {\n      const { id, setTimeout } = action.payload\n      if (!id) {\n        action.payload.id = nanoid()\n      }\n      action.payload.setTimeout = typeof setTimeout === 'undefined' ? true : false\n\n      return [...state, action.payload]\n    }\n\n    case DISMISS: {\n      if (!action.payload) {\n        throw new Error('Missing alert id')\n      }\n      return state.filter((alert) => alert.id !== action.payload)\n    }\n\n    case CLEAR:\n      return []\n\n    default:\n      throw new Error('Unhandled action type')\n  }\n}\n\nexport const initialState = {\n  alerts: [],\n}\n\nexport const useAlert = (): AlertT => {\n  const [state, dispatch] = React.useReducer(alertReducer, [])\n\n  const send = React.useCallback((alert: AlertItem) => {\n    const timeout = alert.timeout || DefaultTimeout\n    dispatch({ type: SEND, payload: alert })\n    if (alert.setTimeout) {\n      setTimeout(() => dispatch({ type: DISMISS, payload: alert.id! }), timeout) // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n  }, [])\n\n  const dismiss = React.useCallback((id: string) => dispatch({ type: DISMISS, payload: id }), [])\n\n  const clear = React.useCallback(() => dispatch({ type: CLEAR }), [])\n\n  return { clear, dismiss, send, alerts: [...state] }\n}\n","/**\n * Testing example @see: https://codesandbox.io/s/modern-sea-tx3ro?from-embed=&file=/src/components/Greeting.test.tsx\n */\nimport React from 'react'\n\nimport { AlertItem, useAlert } from './alert-reducer'\n\ntype State = AlertItem[]\ntype Dispatch = {\n  alerts: AlertItem[]\n  clear: () => void\n  dismiss: (id: string) => void\n  send: (error: AlertItem) => void\n}\n\ntype AlertProviderProps = {\n  children: React.ReactNode\n}\n\nconst AlertStateContext = React.createContext<State | undefined>(undefined)\nconst AlertDispatchContext = React.createContext<Dispatch | undefined>(undefined)\n\nexport const AlertProvider = ({ children }: AlertProviderProps): JSX.Element => {\n  const userHandler: Dispatch = useAlert()\n\n  return (\n    <AlertStateContext.Provider value={userHandler.alerts}>\n      <AlertDispatchContext.Provider value={userHandler}>{children}</AlertDispatchContext.Provider>\n    </AlertStateContext.Provider>\n  )\n}\n\nexport const useAlertState = (): State => {\n  const context = React.useContext(AlertStateContext)\n  if (context === undefined) {\n    throw new Error('useAlertState must be used within a AlertProvider')\n  }\n  return context\n}\n\nexport const useAlertDispatch = (): Dispatch => {\n  const context = React.useContext(AlertDispatchContext)\n  if (context === undefined) {\n    throw new Error('useAlertDispatch must be used within a AlertProvider')\n  }\n  return context\n}\n","import React from 'react'\n\nimport { IconButton } from '@material-ui/core'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\nimport { AlertTitle } from '@material-ui/lab'\n\nimport { useAlertDispatch, useAlertState } from './AlertContext'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0px 100px 0 100px',\n      position: 'absolute',\n      top: 65,\n      width: 'calc(100vw - 200px)',\n      // backgroundColor: 'gray',\n      zIndex: 100,\n      '& > * + *': {\n        marginTop: theme.spacing(1),\n      },\n    },\n    actionItem: {\n      width: 600,\n    },\n  }),\n)\n\nexport const Alerts = (): JSX.Element | null => {\n  const context = useAlertState()\n  const classes = useStyles()\n\n  const Alert = (props: AlertProps) => {\n    const dispatch = useAlertDispatch()\n\n    return (\n      <MuiAlert\n        className={classes.actionItem}\n        elevation={6}\n        // severity={props.severity}\n        variant='filled'\n        action={\n          <IconButton\n            aria-label='close'\n            color='inherit'\n            size='small'\n            onClick={() => dispatch.dismiss(props.id!)} // eslint-disable-line @typescript-eslint/no-non-null-assertion\n          >\n            <CloseIcon fontSize='inherit' />\n          </IconButton>\n        }\n        {...props}\n      />\n    )\n  }\n\n  if (!context.length) return null\n\n  return (\n    <div className={classes.root}>\n      {context.map((c) => (\n        <Alert key={c.id} id={c.id} severity={c.severity}>\n          {c.title && <AlertTitle>{c.title}</AlertTitle>}\n          {c.message}\n        </Alert>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Button, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nimport { LinkItem } from '../types'\n\nexport const DashButton = ({ label, path }: LinkItem): JSX.Element => {\n  return (\n    <Grid item>\n      <Button component={Link} to={path}>\n        {label}\n      </Button>\n    </Grid>\n  )\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    flex: {\n      flex: 1,\n    },\n    mainContainer: {\n      display: 'flex',\n      flex: 1,\n      flexDirection: 'column',\n      margin: 'auto',\n    },\n    titleLink: {\n      textDecoration: 'none',\n      color: '#fff',\n    },\n    paper: {\n      minHeight: 600,\n      // minWidth: 275,\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n    },\n    popperClose: {\n      pointerEvents: 'none',\n      zIndex: -1,\n    },\n  }),\n)\n\nexport default useStyles\n","import React from 'react'\n\nimport { Divider, Typography } from '@material-ui/core'\n\ninterface PageTitleProps {\n  title: string\n}\n\nexport const PageTitle = ({ title }: PageTitleProps): JSX.Element => (\n  <>\n    <Typography gutterBottom variant='h5'>\n      {title}\n    </Typography>\n    <Divider light />\n    <br />\n  </>\n)\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      position: 'relative',\n      // left: theme.spacing.unit * 10,\n    },\n    progress: {\n      margin: theme.spacing(2),\n    },\n  }),\n)\n","import React from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { useStyles } from './style'\n\nexport const Loader = (): JSX.Element => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.container} data-testid='loader'>\n      <CircularProgress className={classes.progress} />\n    </div>\n  )\n}\n","/**\n * ErrorAlert\n *\n * Inspiration for this was taken from https://kentcdodds.com/blog/use-react-error-boundary-to-handle-errors-in-react\n */\n\nimport React from 'react'\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Alert, AlertTitle } from '@material-ui/lab'\n\ntype ErrorProps = {\n  error: Error\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0 auto 0',\n      paddingTop: theme.spacing(1),\n      width: '100%',\n      zIndex: 100,\n      '& > * + *': {\n        marginTop: theme.spacing(1),\n      },\n    },\n    actionItem: {\n      width: 600,\n    },\n    errorTxt: {\n      fontSize: '150%',\n      fontWeight: 600,\n    },\n  }),\n)\n\n/**\n * Component to display an error alert\n * @param error\n */\nexport const ErrorAlert = ({ error }: ErrorProps): JSX.Element => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Alert className={classes.actionItem} severity='error' variant='filled'>\n        <AlertTitle className={classes.errorTxt}>Something went wrong:</AlertTitle>\n        {error.message}\n      </Alert>\n    </div>\n  )\n}\n","/* eslint-disable */\n/**\n * Core utilities file\n *\n * @todo fix eslint and typescript issues \n * @todo: handle empty or invalid input\n */\n\n\nexport const extractPathParts = (pathname: string, start = 2): Array<string> | null => {\n  const prts = pathname.split('/')\n  if (prts.length < start + 1) return null\n\n  return prts.slice(start)!\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\nexport const fmtNumber = (number: number, decimal = 2, useGrouping = false, currency = false) => {\n  if (number === undefined) return null\n\n  let opts\n  if (currency) {\n    opts = {\n      style: 'currency',\n      currency: 'USD'\n    }\n  }\n  const formatter = new Intl.NumberFormat('en-US', opts)\n  return formatter.format(number)\n}\n\n/* export const setOrderedFuelTypes =\n  (fuelTypes, fuelTypeList) => fuelTypeList.filter(ft => fuelTypes.includes(ft))\n\nexport const ucFirst = word => word.charAt(0).toUpperCase() + word.slice(1)\n */\n\n export function getEnv() {\n   const nodeEnv = process.env.NODE_ENV\n   const { hostname } = window.location\n  if (window.location.hostname.indexOf('stage') > -1 || nodeEnv as string === 'stage') {\n    return 'stage'\n  } else if (window.location.hostname === 'localhost' && nodeEnv) {\n    return nodeEnv\n  } else if (nodeEnv === 'production') {\n    return 'production'\n  } else {\n    return 'production'\n  }\n}\n\nexport function getTitle() {\n  const env = getEnv()\n\n  const mainTitle = 'Gales Dips'\n  let title = ''\n  switch (env) {\n    case 'development':\n      title = `${mainTitle} \\u00b7 Dev`\n      break\n    case 'stage':\n      title = `${mainTitle} \\u00b7 Staging`\n      break\n    case 'production':\n      title = `${mainTitle} \\u00b7 Live`\n      break\n    default:\n      title = mainTitle\n  }\n  return title\n}\n","import { getEnv } from '../utils/main'\n\nconst prodDomain = 'https://api-prod.gdps.pfapi.io/graphql'\n// const prodDomain = 'http://192.168.86.137:4000'\nconst stageDomain = 'https://api-stage.gdps.pfapi.io/graphql'\n\n// const liveURI = 'https://fqhx4fm4d8.execute-api.ca-central-1.amazonaws.com/Prod/graphql'\n// const localURI = 'http://127.0.0.1:3000/graphql'\nconst localURI = 'http://127.0.0.1:4000/'\n\nconst conf = {\n  development: {\n    BASE_URL: localURI,\n  },\n  production: {\n    BASE_URL: prodDomain,\n  },\n  stage: {\n    BASE_URL: stageDomain,\n  },\n  test: {\n    BASE_URL: localURI,\n  },\n}\nconst config = conf[getEnv()]\n\n/**\n ====== Constants ======\n */\nexport const LOCAL_TOKEN_KEY = 'userToken'\n\n// Date Formats\nexport const STD_DATE_FORMAT = 'yyyy-MM-dd'\nexport const HUMAN_DATE_FORMAT = 'MMM d, yyy'\n\nexport default config\n","/**\n * Module returns valid cognito token\n *\n * Inspiration for this found here https://stackoverflow.com/questions/53375350/how-handle-refresh-token-service-in-aws-amplify-js\n * Docs for amazon-cognito-identity-js https://www.npmjs.com/package/amazon-cognito-identity-js\n *\n * @TODO: get rid of TS 'any' where possible\n * @TODO: add tests\n */\nimport {\n  CognitoRefreshToken,\n  CognitoUser,\n  CognitoUserPool,\n  CognitoUserSession,\n  ICognitoUserPoolData,\n} from 'amazon-cognito-identity-js'\n\nimport { LOCAL_TOKEN_KEY } from '../config'\n\n/**\n * Get current user session.\n *\n * @param {object} cognitoUser session\n */\nfunction getSession(cognitoUser: CognitoUser): Promise<CognitoUserSession | null> {\n  // console.log('cognitoUser: ', cognitoUser)\n  return new Promise((resolve, reject) => {\n    cognitoUser.getSession((err: Error, session: CognitoUserSession | null) => {\n      if (err) reject(err)\n      resolve(session)\n    })\n  })\n}\n\n/**\n * Refresh user session\n *\n * @param {object} cognitoUser\n * @param {object} session\n */\nfunction refreshSession(cognitoUser: CognitoUser, session: CognitoUserSession) {\n  return new Promise((resolve, reject) => {\n    const refreshToken: CognitoRefreshToken = session.getRefreshToken()\n    cognitoUser.refreshSession(refreshToken, (err, refSession) => {\n      if (err) reject(err)\n      resolve(refSession)\n    })\n  }) as Promise<any> // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\n/**\n * Parse local token.\n *\n * Token is stored in localStorage.\n *\n * @returns {object|bool} parsed token or false\n */\nfunction parseLocalToken() {\n  const localToken = window.localStorage.getItem(LOCAL_TOKEN_KEY)\n  if (!localToken) return false\n  return JSON.parse(atob(localToken.split('.')[1]))\n}\n\n/**\n * Refresh token.\n *\n * Refresh token if about to expire, or return current token.\n *\n * @returns {string} cognito token\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function getToken(): Promise<any | null> {\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  const storage = window.localStorage\n\n  // const dte: number = (new Date() / 1000): number\n  const now = Math.floor(new Date().valueOf() / 1000)\n  const expireBuffer = 60 * 5\n  const cutoffTime = now + expireBuffer\n\n  const tokenObj = parseLocalToken()\n  if (tokenObj && cutoffTime < tokenObj.exp) {\n    // console.log('returning local token') // eslint-disable-line no-console\n  }\n  if (tokenObj && cutoffTime < tokenObj.exp) return storage.getItem(LOCAL_TOKEN_KEY)\n\n  const poolData: ICognitoUserPoolData = {\n    UserPoolId: process.env.REACT_APP_COGNITO_POOL_ID ? process.env.REACT_APP_COGNITO_POOL_ID : '',\n    ClientId: process.env.REACT_APP_COGNITO_CLIENT_ID ? process.env.REACT_APP_COGNITO_CLIENT_ID : '',\n  }\n  // console.log('process.env: ', process.env)\n  // console.log('poolData: ', poolData)\n  const userPool = new CognitoUserPool(poolData)\n  // console.log('userPool: ', userPool)\n  const cognitoUser: CognitoUser = userPool.getCurrentUser()! // eslint-disable-line @typescript-eslint/no-non-null-assertion\n\n  const session = await getSession(cognitoUser)\n  // const expire = session.idToken.payload.exp\n  // console.log('time to expire:', expire - now)\n  // console.log('time to reset token:', expire - cutoffTime)\n  // if (tokenObj && cutoffTime < expire) return storage.getItem(LOCAL_TOKEN_KEY)\n\n  if (session) {\n    const rSession = await refreshSession(cognitoUser, session)\n    const userToken = rSession.accessToken.jwtToken\n    console.log('userToken refreshed') // eslint-disable-line no-console\n    return userToken\n  }\n  return null\n}\n\n// TODO: check if we can substitute 'any' for the user argument\nexport function setToken(authData: any): void { // eslint-disable-line\n  const storage = window.localStorage\n  storage.setItem(LOCAL_TOKEN_KEY, authData.signInUserSession.accessToken.jwtToken)\n}\n","import React from 'react'\n\nimport { useQuery, gql } from '@apollo/client'\n\nimport { Divider, Grid, Paper, Typography } from '@material-ui/core'\n\nimport { DashButton } from './DashButton'\nimport { LinkItems } from '../types'\nimport useStyles from '../../../style/main'\nimport { PageTitle } from '../PageTitle'\nimport { Loader } from '../Loader'\nimport { ErrorAlert } from '../Errors'\nimport { getEnv } from '../../../utils'\n\nconst menuItems: LinkItems = [\n  { label: 'Dip Entries', path: '/dips' },\n  { label: 'Propane Entries', path: '/propane' },\n  { label: 'Reports', path: '/reports' },\n  { label: 'Import Sales Data', path: '/import-data' },\n]\n\nexport const GET_STATIONS = gql`\n  query Stations {\n    stations {\n      id\n      name\n    }\n  }\n`\n\nexport function Dashboard(): JSX.Element {\n  const classes = useStyles()\n  // const [load, setLoader] = React.useState(true)\n  const { loading, error } = useQuery(GET_STATIONS)\n\n  /* React.useEffect(() => {\n    const myFunc = async (ms: number, msg: string) => {\n      const res = await later(ms, msg)\n      setLoader(false)\n      return res\n    }\n    myFunc(3000, '')\n  }, [load]) */\n\n  if (error) return <ErrorAlert error={error} />\n\n  const DevWarnMsg = getEnv() !== 'production' && 'Warning: You are currently NOT in a production environment.'\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <PageTitle title='Select Activity' />\n        {loading ? (\n          <>\n            <Typography>Please stand by as we load the application...</Typography>\n            <Loader />\n          </>\n        ) : (\n          <Grid container spacing={4}>\n            {menuItems.map((m) => (\n              <DashButton key={m.path} label={m.label} path={m.path} />\n            ))}\n            <div>{error}</div>\n            <Divider />\n          </Grid>\n        )}\n        <div style={{ margin: 20, fontWeight: 600, fontSize: '120%' }}>{DevWarnMsg}</div>\n      </Paper>\n    </>\n  )\n}\n","import { Theme, createStyles, withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nexport const ContentContainer = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: 600,\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n    },\n  }),\n)(Paper)\n","import React from 'react'\n\nimport { format } from 'date-fns'\nimport { Button, Typography } from '@material-ui/core'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { HUMAN_DATE_FORMAT } from '../../config'\n\ninterface ImportProps {\n  date: Date\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n  }),\n)\n\nexport const ImportDataLink = ({ date }: ImportProps): JSX.Element => {\n  const classes = useStyles()\n  const fmtDte = format(new Date(date), HUMAN_DATE_FORMAT)\n\n  return (\n    <div className={classes.container}>\n      <Typography variant='body1'>Date of last Fuel Sale Import: {`${fmtDte}`}</Typography>\n      <br />\n      <Button variant='outlined'>Import Dips Data</Button>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { InputLabel, MenuItem, Select } from '@material-ui/core'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { useQuery, gql } from '@apollo/client'\nimport { useParams } from 'react-router-dom'\n\nexport const GET_STATIONS = gql`\n  query Stations {\n    stations {\n      id\n      name\n    }\n  }\n`\n\ntype Station = {\n  id: string\n  name: string\n}\n\ninterface SelectorProps {\n  stationHandler: (id: string) => void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n)\n\nexport const StationSelector = ({ stationHandler }: SelectorProps): JSX.Element => {\n  const classes = useStyles()\n  const { stationID } = useParams<{ date: string; stationID: string }>()\n  const { loading, error, data } = useQuery(GET_STATIONS)\n  const [station, setStation] = React.useState('')\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const stnID = event.target.value as string\n    setStation(stnID)\n    stationHandler(stnID)\n  }\n\n  React.useEffect(() => {\n    if (stationID) {\n      setStation(stationID)\n    }\n  }, [stationID])\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  return (\n    <>\n      <InputLabel id='station-select-label'>Station</InputLabel>\n      <Select\n        labelId='station-select-label'\n        id='station-select'\n        className={classes.selectEmpty}\n        value={station}\n        onChange={handleChange}\n      >\n        {data.stations.map((s: Station) => (\n          <MenuItem key={s.id} value={s.id}>\n            {s.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </>\n  )\n}\n","import { gql } from '@apollo/client'\n\nexport const DIP_QUERY = gql`\n  query Dips($date: Int!, $dateFrom: Int!, $dateTo: Int!, $stationID: String!) {\n    curDips: dips(date: $date, stationID: $stationID) {\n      date\n      fuelType\n      level\n      litres\n      stationTankID\n      fuelDelivery {\n        litres\n      }\n    }\n    prevDips: dips(date: $dateFrom, stationID: $stationID) {\n      date\n      fuelType\n      level\n      litres\n      stationTankID\n    }\n    fuelPrice(date: $date, stationID: $stationID) {\n      date\n      price\n      stationID\n    }\n    dipOverShortRange(dateFrom: $dateFrom, dateTo: $dateTo, stationID: $stationID) {\n      date\n      overShort\n      stationID\n    }\n  }\n`\n\n/* export const STATION_TANK_QUERY = gql`\n  query StationTanks($stationID: String!) {\n    stationTanks(stationID: $stationID) {\n      id\n      fuelType\n      tankID\n      tank {\n        levels\n        size\n      }\n    }\n  }\n`\n\nexport const FUEL_SALE_LATEST = gql`\n  query FuelSaleLatest($stationID: String!) {\n    fuelSaleLatest(stationID: $stationID) {\n      date\n    }\n  }\n` */\n\nexport const STATION_INFO = gql`\n  query StationInfo($stationID: String!) {\n    stationTanks(stationID: $stationID) {\n      id\n      fuelType\n      tankID\n      tank {\n        levels\n        size\n      }\n    }\n    fuelSaleLatest(stationID: $stationID) {\n      date\n    }\n  }\n`\n","/**\n * Typescript interace and type definitions for the Dips module\n */\n\ninterface TankOverShort {\n  fuelType: string\n  tankLitres: number\n  overShort: number\n  litresSold: number\n}\ntype TankOverShorts = Record<string, TankOverShort>\n\nexport interface Overshort {\n  date: number\n  overShort: TankOverShorts\n  stationID: string\n}\n\ntype FuelDelivery = {\n  litres: number\n}\n\nexport interface Dip {\n  date: number\n  fuelDelivery?: FuelDelivery | null\n  fuelType: string\n  level: number\n  litres: number\n  stationTankID: string\n}\n\ninterface FuelPrice {\n  date: number\n  price: number\n  stationID: string\n}\n\nexport interface OvershortData {\n  overshort: Overshort\n  fuelPrice: FuelPrice\n}\n\nexport interface DipsData extends OvershortData {\n  curDips: Dip[]\n  prevDips: Dip[]\n}\n\nexport type TankIndex = string\n\nexport type DipTankData = Map<TankIndex, TankDip>\n\nexport interface DipFormData {\n  dipTanks: DipTankData\n  overshort: OvershortData\n}\n\nexport enum FuelTypes {\n  NL = 'NL',\n  SNL = 'SNL',\n  DSL = 'DSL',\n  CDSL = 'CDSL',\n}\n\ntype TankLevel = {\n  litres: number\n  level: number\n}\n\ninterface Tank {\n  levels: Record<symbol, TankLevel>\n  size: number\n}\n\ninterface StationTank {\n  fuelType: string\n  id: string\n  tank: Tank\n  tankID: string\n}\n\nexport type StationTanks = StationTank[]\n\nexport interface TankDip {\n  delivery: number | null\n  dips: Dip\n  level: number\n  litres: number | null\n  prevDips: Dip\n  prevLevel: number | null\n  tankID: string\n}\n","import { Dip, DipsData, StationTanks, TankIndex, DipTankData, TankDip, FuelTypes } from './types'\n\nconst tmpTank = {\n  delivery: null,\n  dips: null,\n  level: null,\n  litres: null,\n  prevDips: null,\n  prevLevel: null,\n  tankID: null,\n}\n\nexport const populateTanks = (dips: DipsData, tanks: StationTanks): DipTankData => {\n  const { curDips, prevDips } = dips\n  const tanksObj = new Map<TankIndex, TankDip>()\n\n  for (const ft of Object.values(FuelTypes)) {\n    for (let i = 0; i < tanks.length; i++) {\n      const t = tanks[i]\n      // match tank fuel type from our list\n      if (t.fuelType === ft) {\n        const tmp: TankDip = Object.assign({ ...tmpTank })\n        if (curDips) {\n          // FIXME: must be a cleaner way to do this\n          const tmpDip = curDips.find((ele: Dip) => t.id === ele.stationTankID)\n          if (tmpDip) {\n            tmp.dips = tmpDip\n            tmp.tankID = `${t.tank.size}(${t.tankID}) ${tmpDip.fuelType}`\n            tmp.level = tmpDip.level\n            tmp.litres = tmpDip.litres\n            if (tmpDip.fuelDelivery) {\n              tmp.delivery = tmpDip.fuelDelivery.litres\n            }\n          }\n        }\n        if (prevDips) {\n          const tmpPrevDip = prevDips.find((ele: Dip) => t.id === ele.stationTankID)\n          if (tmpPrevDip) {\n            tmp.prevDips = tmpPrevDip\n          }\n          tmp.prevLevel = tmp.prevDips && tmp.prevDips.level\n        }\n        tanksObj.set(t.id, tmp)\n      }\n    }\n  }\n  return tanksObj\n}\n","import React from 'react'\n\nimport { isAfter, subDays, format, parse } from 'date-fns'\nimport { useLazyQuery } from '@apollo/client'\n\nimport { DIP_QUERY, STATION_INFO } from './queries'\nimport { DipFormData, Overshort } from './types'\nimport { populateTanks } from './utils'\n\nconst SET_CURRENT_QKEY = 'SET_CURRENT_QKEY'\nconst SET_DATE = 'SET_DATE'\nconst SET_DIPS_DATA = 'SET_DIPS_DATA'\nconst SET_ERROR = 'SET_ERROR'\nconst SET_FUELSALE_DATE = 'SET_FUELSALE_DATE'\nconst SET_LOADING = 'SET_LOADING'\nconst SET_STATIONID = 'SET_STATIONID'\nconst SET_HAVE_CURRENT_DIPS = 'SET_HAVE_CURRENT_DIPS'\n\ntype DateType = Date | null\n\ntype DipState = {\n  currentQKey: string\n  date: DateType\n  dipTankData?: DipFormData\n  error: string\n  fuelSaleDate?: Date\n  haveCurrentDips: boolean\n  loading: boolean\n  stationID: string\n}\n\ntype Action =\n  | {\n      type: 'SET_DATE'\n      payload: DateType\n    }\n  | {\n      type: 'SET_ERROR'\n      payload: string\n    }\n  | {\n      type: 'SET_STATIONID'\n      payload: string\n    }\n  | {\n      type: 'SET_LOADING'\n      payload: boolean\n    }\n  | {\n      type: 'SET_FUELSALE_DATE'\n      payload: Date\n    }\n  | {\n      type: 'SET_DIPS_DATA'\n      payload: DipFormData\n    }\n  | {\n      type: 'SET_HAVE_CURRENT_DIPS'\n      payload: boolean\n    }\n  | {\n      type: 'SET_CURRENT_QKEY'\n      payload: string\n    }\n\ninterface DipType extends DipState {\n  setDate: (date: DateType) => void\n  setStationID: (stationID: string) => void\n}\n\nconst dipsReducer = (state: DipState, action: Action): DipState => {\n  switch (action.type) {\n    case SET_DATE: {\n      return { ...state, date: action.payload }\n    }\n\n    case SET_ERROR: {\n      return { ...state, error: action.payload }\n    }\n\n    case SET_STATIONID: {\n      return { ...state, stationID: action.payload }\n    }\n\n    case SET_LOADING: {\n      return { ...state, loading: action.payload }\n    }\n\n    case SET_FUELSALE_DATE: {\n      return { ...state, fuelSaleDate: action.payload }\n    }\n\n    case SET_DIPS_DATA: {\n      return { ...state, dipTankData: action.payload }\n    }\n\n    case SET_HAVE_CURRENT_DIPS: {\n      return { ...state, haveCurrentDips: action.payload }\n    }\n\n    case SET_CURRENT_QKEY: {\n      return { ...state, currentQKey: action.payload }\n    }\n\n    default:\n      throw new Error('Unhandled action type')\n  }\n}\n\nconst initialState = {\n  currentQKey: '',\n  date: new Date(),\n  error: '',\n  haveCurrentDips: false,\n  loading: false,\n  stationID: '',\n}\n\nexport const useDips = (): DipType => {\n  const [state, dispatch] = React.useReducer(dipsReducer, initialState)\n  const { currentQKey, date, fuelSaleDate, haveCurrentDips, stationID } = state\n\n  const [getTanks, { error: tanksError, loading: tanksLoading, data: stationData }] = useLazyQuery(STATION_INFO)\n  const [getDips, { error: dipsError, loading: dipsLoading, data: dipsData }] = useLazyQuery(DIP_QUERY)\n\n  const setDate = React.useCallback((date: DateType) => dispatch({ type: SET_DATE, payload: date }), [])\n\n  const setStationID = React.useCallback(\n    (stationID: string) => {\n      dispatch({ type: SET_STATIONID, payload: stationID })\n      getTanks({ variables: { stationID } })\n    },\n    [getTanks],\n  )\n\n  React.useEffect(() => {\n    dispatch({ type: SET_LOADING, payload: tanksLoading })\n  }, [tanksLoading])\n\n  React.useEffect(() => {\n    dispatch({ type: SET_LOADING, payload: dipsLoading })\n  }, [dipsLoading])\n\n  React.useEffect(() => {\n    const fsDate = stationData?.fuelSaleLatest.date\n    if (fsDate) {\n      const date = parse(fsDate.toString(), 'yyyyMMdd', new Date())\n      dispatch({ type: SET_FUELSALE_DATE, payload: date })\n    }\n    if (stationID) {\n      getTanks({ variables: { stationID } })\n    }\n  }, [stationID, stationData, getTanks])\n\n  React.useEffect(() => {\n    if (date && fuelSaleDate) {\n      dispatch({ type: SET_HAVE_CURRENT_DIPS, payload: !isAfter(date, fuelSaleDate) })\n    }\n  }, [date, fuelSaleDate])\n\n  React.useEffect(() => {\n    if (dipsError || tanksError) {\n      const errMsg = 'An error has occurred with the dips data. Please report this to the administrator'\n      dispatch({ type: SET_ERROR, payload: errMsg })\n    }\n  }, [dipsError, tanksError])\n\n  /**\n   * Having trouble with this hook as it would repeat itself when invoked\n   * My fix, (an odd work-around granted) was to compare the last date and stationID\n   * to the requested one, then query if they were different\n   */\n  React.useEffect(() => {\n    const dte = date as Date\n    const dteStr = format(new Date(dte), 'yyyyMMdd')\n    const dteNo = Number(dteStr)\n    const stateQKey = `${dteStr}/${stationID}`\n\n    if (haveCurrentDips && stateQKey !== currentQKey) {\n      console.log('fetch dips')\n      dispatch({ type: SET_CURRENT_QKEY, payload: `${dteStr}/${stationID}` })\n      getDips({\n        variables: {\n          date: dteNo,\n          dateFrom: Number(format(subDays(dte, 1), 'yyyyMMdd')),\n          dateTo: dteNo,\n          stationID,\n        },\n      })\n    }\n  }, [currentQKey, date, stationID, haveCurrentDips, getDips])\n\n  /**\n   * TODO: clean up dipTankData here\n   */\n  React.useEffect(() => {\n    return () => {\n      console.log('ok, leaving Dips clean up')\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (dipsData) {\n      const findDate = Number(format(date as Date, 'yyyyMMdd'))\n      const os = dipsData.dipOverShortRange.find((ele: Overshort) => ele.date === findDate)\n      if (dipsData && stationData?.stationTanks && os) {\n        const dipTankData = populateTanks(dipsData, stationData.stationTanks)\n        const dipData: DipFormData = {\n          dipTanks: dipTankData,\n          overshort: {\n            overshort: os,\n            fuelPrice: dipsData.fuelPrice,\n          },\n        }\n        dispatch({ type: SET_DIPS_DATA, payload: dipData })\n      }\n    }\n  }, [date, dipsData, stationData])\n\n  return { setDate, setStationID, ...state }\n}\n","import React from 'react'\n\nimport { Paper, Table, TableBody, TableHead, TableRow, TableCell, TableContainer, Typography } from '@material-ui/core'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\nimport { format, parse } from 'date-fns'\n\nimport { FuelTypes, OvershortData } from './types'\nimport { fmtNumber } from '../../utils'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n    fuelPriceRow: {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n    negative: {\n      color: theme.palette.primary.main,\n    },\n  }),\n)\n\ninterface OSProps {\n  data: OvershortData\n}\n\nexport const DipOvershort = ({ data }: OSProps): JSX.Element => {\n  const classes = useStyles()\n\n  let fuelPrice\n  let displayDate\n\n  const fts = Object.values(FuelTypes)\n  const oss = data.overshort.overShort\n  const rows = []\n  if (oss) {\n    for (let i = 0; i < fts.length; i++) {\n      if (oss[fts[i]]) {\n        rows.push(oss[fts[i]])\n      }\n    }\n  }\n  if (data.fuelPrice) {\n    fuelPrice = fmtNumber(data.fuelPrice.price, 2)\n    displayDate = format(parse(data.fuelPrice.date.toString(), 'yyyyMMdd', new Date()), 'E, MMM Do yyyy')\n  }\n  return (\n    <>\n      <Typography variant='h6'>Overshort</Typography>\n      <TableContainer component={Paper}>\n        <Table aria-label='overshort table' size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell>Fuel Type</TableCell>\n              <TableCell align='right'>Dip Litres</TableCell>\n              <TableCell align='right'>Litres Sold</TableCell>\n              <TableCell align='right'>Overshort</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((os) => (\n              <TableRow key={os.fuelType}>\n                <TableCell>{os.fuelType}</TableCell>\n                <TableCell align='right'>{fmtNumber(os.tankLitres, 3, true)}</TableCell>\n                <TableCell align='right'>{fmtNumber(os.litresSold, 3, true)}</TableCell>\n                <TableCell align='right' className={classNames({ [classes.negative]: os.overShort < 0 })}>\n                  {fmtNumber(os.overShort, 3, true)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className={classes.fuelPriceRow}>\n        Fuel Price: {fuelPrice} ({displayDate})\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableContainer,\n  TextField,\n  Typography,\n  Grid,\n} from '@material-ui/core'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { DipFormData } from './types'\nimport { DipOvershort } from './DipOvershort'\nimport { fmtNumber } from '../../utils'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: theme.spacing(1),\n      marginTop: theme.spacing(2),\n      maxWidth: 1200,\n    },\n    input: {\n      width: 80,\n    },\n    table: {},\n  }),\n)\n\ninterface FormProps {\n  data: DipFormData\n}\n\nexport const DipsForm = ({ data }: FormProps): JSX.Element => {\n  const classes = useStyles()\n  const tankData = data.dipTanks\n  const osData = data.overshort\n  // console.log('osData: ', osData)\n  const dataKeys = Array.from(tankData.keys())\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Typography variant='h6'>Dips</Typography>\n\n          <form autoComplete='off'>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label='dips table' size='small'>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Tank</TableCell>\n                    <TableCell>Level</TableCell>\n                    <TableCell>Litres</TableCell>\n                    <TableCell>Delivery</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {dataKeys.map((k, i) => (\n                    <TableRow key={k}>\n                      <TableCell>{tankData.get(k)?.tankID}</TableCell>\n                      <TableCell>\n                        <TextField\n                          autoFocus={i === 0}\n                          className={classes.input}\n                          id={`${k}_level`}\n                          margin='dense'\n                          type='number'\n                          value={tankData.get(k)?.level || 0}\n                          variant='outlined'\n                        />\n                      </TableCell>\n                      <TableCell>{fmtNumber(tankData.get(k)?.litres as number, 0, true)}</TableCell>\n                      <TableCell>\n                        <TextField\n                          className={classes.input}\n                          id={`${k}_delivery`}\n                          margin='dense'\n                          type='number'\n                          value={tankData.get(k)?.delivery || 0}\n                          variant='outlined'\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </form>\n        </Grid>\n\n        <Grid item xs={5}>\n          <DipOvershort data={osData} />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { Grid, Icon, IconButton, FormControl } from '@material-ui/core'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { addDays, subDays, format } from 'date-fns'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { utcToZonedTime } from 'date-fns-tz'\n\nimport { ContentContainer } from '../Base/ContentContainer'\nimport { HUMAN_DATE_FORMAT, STD_DATE_FORMAT } from '../../config'\nimport { ImportDataLink } from './ImportDataLink'\nimport { Loader } from '../Base/Loader'\nimport { PageTitle } from '../Base/PageTitle'\nimport { StationSelector } from '../Base/StationSelector'\nimport { useAlertDispatch } from '../Base/Alert'\nimport { useDips } from './useDips'\nimport { DipsForm } from './DipsForm'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    navButton: {\n      // backgroundColor: theme.palette.secondary.light,\n      // maxWidth: 60,\n      // marginLeft: theme.spacing(1),\n      // marginRight: theme.spacing(1),\n    },\n    navIcon: {\n      // margin: -4,\n      // paddingLeft: 4,\n      // paddingRight: -60,\n    },\n    navControl: {\n      flexDirection: 'row',\n      marginTop: theme.spacing(1),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }),\n)\n\nexport function Dips(): JSX.Element {\n  const classes = useStyles()\n  const history = useHistory()\n  const alertDispatch = useAlertDispatch()\n  const [nextDisabled, setNextDisabled] = React.useState<boolean>(true)\n  const { date: pDate, stationID: pStationID } = useParams<{ date: string; stationID: string }>()\n  const {\n    date,\n    dipTankData,\n    error,\n    haveCurrentDips,\n    loading,\n    fuelSaleDate,\n    stationID,\n    setDate,\n    setStationID,\n  } = useDips()\n\n  const handleNextPrevDate = (val: string) => {\n    const dte = date as Date\n    if (val === 'p') {\n      setDate(subDays(dte, 1))\n    } else if (val === 'n') {\n      setDate(addDays(dte, 1))\n    }\n  }\n\n  // Check for url parameters and set\n  React.useEffect(() => {\n    if (pDate && pStationID) {\n      setDate(utcToZonedTime(new Date(pDate), 'Europe/London'))\n      setStationID(pStationID)\n    }\n  }, [pDate, pStationID, setDate, setStationID])\n\n  const dte = date as Date\n  React.useEffect(() => {\n    const handleSetNextDisable = () => {\n      const selectDteFmt = Number(format(dte, 'yyyyMMdd'))\n      const todayFmt = Number(format(new Date(), 'yyyyMMdd'))\n      const isPast = selectDteFmt >= todayFmt\n      setNextDisabled(isPast)\n    }\n    handleSetNextDisable()\n    if (stationID) {\n      const fmtDte = format(dte, STD_DATE_FORMAT)\n      const uri = `/dips/${fmtDte}/${stationID}`\n      history.push(uri)\n    }\n  }, [dte, history, stationID])\n\n  React.useEffect(() => {\n    if (error) {\n      alertDispatch.send({ message: error, severity: 'error', setTimeout: false, title: 'Data Error' })\n    }\n  }, [alertDispatch, error])\n\n  return (\n    <ContentContainer>\n      <PageTitle title='Dip Entries' />\n\n      <Grid container spacing={3} style={{ maxWidth: 550 }}>\n        <Grid item xs={4}>\n          <FormControl className={classes.formControl}>\n            <StationSelector stationHandler={setStationID} />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={4}>\n          <FormControl className={classes.formControl} style={{ width: 160 }}>\n            <KeyboardDatePicker\n              autoOk\n              disableFuture\n              format={HUMAN_DATE_FORMAT}\n              label='Date'\n              onChange={setDate}\n              value={date}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={4}>\n          <FormControl className={classes.navControl}>\n            <IconButton className={classes.navButton} onClick={() => handleNextPrevDate('p')}>\n              <Icon className={classes.navIcon} fontSize='large'>\n                arrow_back_ios\n              </Icon>\n            </IconButton>\n            <IconButton className={classes.navButton} disabled={nextDisabled} onClick={() => handleNextPrevDate('n')}>\n              <Icon className={classes.navIcon} fontSize='large'>\n                arrow_forward_ios\n              </Icon>\n            </IconButton>\n          </FormControl>\n        </Grid>\n      </Grid>\n      {loading && <Loader />}\n      {!haveCurrentDips && !loading && fuelSaleDate && <ImportDataLink date={fuelSaleDate} />}\n      {haveCurrentDips && !loading && dipTankData && <DipsForm data={dipTankData} />}\n    </ContentContainer>\n  )\n}\n","import { Theme, makeStyles, createStyles } from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      fontFamily: theme.typography.fontFamily,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    titleLink: {\n      textDecoration: 'none',\n      color: '#fff',\n    },\n    userMenu: {\n      flexGrow: 1,\n      textAlign: 'right',\n    },\n  }),\n)\n","import React from 'react'\n\ntype State = Partial<{\n  username: string\n  name: string\n  email: string\n  isLoggedIn: boolean\n}>\ntype Dispatch = (user: State) => void\n\ntype UserProviderProps = {\n  children: React.ReactNode\n}\n\nconst UserStateContext = React.createContext<State | undefined>(undefined)\nconst UserDispatchContext = React.createContext<Dispatch | undefined>(undefined)\n\nexport const UserProvider = ({ children }: UserProviderProps): JSX.Element => {\n  const [user, setUser] = React.useState({})\n\n  return (\n    <UserStateContext.Provider value={user}>\n      <UserDispatchContext.Provider value={setUser}>{children}</UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  )\n}\n\nexport const useUserState = (): State => {\n  const context = React.useContext(UserStateContext)\n  if (context === undefined) {\n    throw new Error('useUserState must be used within a UserProvider')\n  }\n  return context\n}\n\nexport const useUserDispatch = (): Dispatch => {\n  const context = React.useContext(UserDispatchContext)\n  if (context === undefined) {\n    throw new Error('useUserState must be used within a UserProvider')\n  }\n  return context\n}\n","import React, { useState } from 'react'\n\nimport { Auth } from 'aws-amplify'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\nimport { AccountCircle, Menu as MenuIcon } from '@material-ui/icons'\nimport { AppBar, IconButton, Menu, MenuItem, Toolbar, Typography } from '@material-ui/core'\n\nimport { LinkItems } from '../types'\nimport { useStyles } from './style'\nimport { useUserDispatch, useUserState } from '../User/UserContext'\n\nconst menuItems: LinkItems = [\n  { label: 'Dashboard', path: '/' },\n  { label: 'Dip Entries', path: '/dips' },\n  { label: 'Contact', path: '/contact' },\n]\n\nexport const Header = (): JSX.Element => {\n  const classes = useStyles()\n  const location = useLocation()\n  const history = useHistory()\n\n  const selectedIndex = location.pathname\n  const [mainMenuEl, setMainMenuEl] = useState<null | HTMLElement>(null)\n  const [userMenuEl, setUserMenuEl] = useState<null | HTMLElement>(null)\n\n  const user = useUserState()\n\n  const handleMainMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setMainMenuEl(event.currentTarget)\n  }\n\n  const handleMainMenuClose = () => {\n    setMainMenuEl(null)\n  }\n\n  const handleUserMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setUserMenuEl(event.currentTarget)\n  }\n\n  const handleUserMenuClose = () => {\n    setUserMenuEl(null)\n  }\n\n  const handleNavigate = (event: React.MouseEvent<HTMLElement>, path: string) => {\n    history.push(path)\n    setMainMenuEl(null)\n    setUserMenuEl(null)\n  }\n\n  const userDispatch = useUserDispatch()\n  React.useEffect(() => () => userDispatch({}), [userDispatch])\n\n  const handleLogout = async () => {\n    try {\n      await Auth.signOut({ global: true })\n      console.log('logged out')\n    } catch (error) {\n      console.log('error signing out: ', error)\n    }\n    setUserMenuEl(null)\n  }\n\n  return (\n    <header className={classes.root}>\n      <AppBar color='secondary' position='static'>\n        <Toolbar>\n          <IconButton\n            aria-haspopup='true'\n            aria-label='Menu'\n            className={classes.menuButton}\n            color='inherit'\n            edge='start'\n            onClick={handleMainMenuClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id='main-menu'\n            anchorEl={mainMenuEl}\n            getContentAnchorEl={null}\n            keepMounted\n            onClose={handleMainMenuClose}\n            open={Boolean(mainMenuEl)}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            {menuItems.map((m) => (\n              <MenuItem\n                disabled={m.path === selectedIndex}\n                key={m.path}\n                onClick={(e) => handleNavigate(e, m.path)}\n                selected={m.path === selectedIndex}\n              >\n                {m.label}\n              </MenuItem>\n            ))}\n          </Menu>\n          <Typography className={classes.title} color='inherit' variant='h6'>\n            <Link className={classes.titleLink} to='/'>\n              Gales Dips\n            </Link>\n          </Typography>\n          <div className={classes.userMenu}>\n            {user.name}\n            <IconButton aria-haspopup='true' color='inherit' onClick={handleUserMenuClick}>\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              anchorEl={userMenuEl}\n              id='user-menu'\n              onClose={handleUserMenuClose}\n              open={Boolean(userMenuEl)}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n            >\n              <MenuItem onClick={(e) => handleNavigate(e, '/profile')}>Profile</MenuItem>\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </header>\n  )\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nimport { ContentContainer } from '../Base/ContentContainer'\nimport { useAlertDispatch } from '../Base/Alert'\n\nexport function Import(): JSX.Element {\n  const dispatch = useAlertDispatch()\n\n  return (\n    <ContentContainer>\n      <h2>Import</h2>\n      <div>\n        <Button variant='outlined' onClick={() => dispatch.send({ message: 'my stupid test', timeout: 1000 })}>\n          Open success alert\n        </Button>\n        <Button\n          variant='outlined'\n          onClick={() =>\n            dispatch.send({\n              message:\n                'my stupid error message all day long, with a longer sentence displaying who knows what kind of message',\n              severity: 'info',\n              title: 'Information',\n            })\n          }\n        >\n          Open info alert\n        </Button>\n        <Button\n          variant='outlined'\n          onClick={() =>\n            dispatch.send({\n              message: 'error message with false timeout',\n              severity: 'error',\n              title: 'Big Bad Error',\n              setTimeout: false,\n            })\n          }\n        >\n          Open error alert freeze\n        </Button>\n        <Button\n          variant='outlined'\n          onClick={() =>\n            dispatch.send({\n              message: 'Warning message with false timeout',\n              severity: 'warning',\n              title: 'Warning',\n              // setTimeout: false,\n            })\n          }\n        >\n          Open warning alert\n        </Button>\n      </div>\n    </ContentContainer>\n  )\n}\n","import React from 'react'\n\nimport { useLocation } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\n\nimport { ContentContainer } from '../ContentContainer'\n\nexport const NoMatch = (): JSX.Element => {\n  const location = useLocation()\n\n  return (\n    <ContentContainer>\n      <Typography gutterBottom variant='h6'>\n        No match for &apos;<code>{location.pathname}</code>&apos;\n      </Typography>\n      <Typography variant='body1'>Please check your records or contact support</Typography>\n    </ContentContainer>\n  )\n}\n","import React from 'react'\n\nimport { AlertTitle } from '@material-ui/lab'\nimport Button from '@material-ui/core/Button'\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { ContentContainer } from '../Base/ContentContainer'\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />\n}\n\nexport function Propane(): JSX.Element {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClick = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <ContentContainer>\n      <h2>Propane</h2>\n      <div>\n        <Button variant='outlined' onClick={handleClick}>\n          Open success snackbar\n        </Button>\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity='success'>\n            <AlertTitle>Success</AlertTitle>\n            This is a success message with a somewhat longer message. <br />\n            Even longer yes...\n          </Alert>\n        </Snackbar>\n      </div>\n    </ContentContainer>\n  )\n}\n","import React from 'react'\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\nimport { Alert, AlertTitle } from '@material-ui/lab'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\n\n// import { ContentContainer } from '../Base/ContentContainer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: '0 auto 0',\n      paddingTop: theme.spacing(1),\n      width: '100%',\n      zIndex: 100,\n      '& > * + *': {\n        marginTop: theme.spacing(1),\n      },\n    },\n    actionItem: {\n      width: 600,\n    },\n    errorTxt: {\n      fontSize: '150%',\n      fontWeight: 600,\n    },\n  }),\n)\n\nexport function Reports(): JSX.Element {\n  const classes = useStyles()\n\n  /* function Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant='filled' {...props} className={classes.actionItem} />\n  } */\n\n  return (\n    <div className={classes.root}>\n      <Alert className={classes.actionItem} severity='error' variant='filled'>\n        <AlertTitle className={classes.errorTxt}>Something went wrong:</AlertTitle>\n        {/* <pre style={{ color: 'red' }}>{error.message}</pre> */}\n        <pre className={classes.errorTxt}>Some kinda longer message here i...</pre>\n      </Alert>\n    </div>\n  )\n}\n","const awsExports = {\n  Auth: {\n    region: 'ca-central-1',\n    userPoolId: 'ca-central-1_lolwfYIAr',\n    userPoolWebClientId: '5n63nd473pv7ne2qskv30gkcbh',\n  },\n}\n\nexport default awsExports\n","import { ApolloClient, InMemoryCache, createHttpLink, from } from '@apollo/client'\nimport { onError } from '@apollo/client/link/error'\nimport { setContext } from '@apollo/client/link/context'\n\nimport config from './config'\nimport { getToken } from './utils'\n\n/**\n * Error Response\n *\n * Logs errors and returns object with error response\n * @param {string} errString\n */\nconst errorResponse = (errString: string) => {\n  console.error(errString) // eslint-disable-line\n  // Sentry.captureMessage(errString)\n  return {\n    response: null,\n    error: new Error(`Error: ${errString}`),\n  }\n}\n\nconst authLink = setContext(async (_, { headers }) => {\n  let token\n  try {\n    token = await getToken()\n  } catch (err) {\n    return errorResponse(err)\n  }\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\n// TODO: log errors to third party log management\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) => {\n      const err = `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      console.error(err)\n      return err\n    })\n  }\n\n  if (networkError) {\n    console.error(`[Network error]: ${networkError}`)\n  }\n})\n\nconst httpLink = createHttpLink({ uri: config.BASE_URL })\n\nconst link = from([authLink, errorLink, httpLink])\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n})\n\nexport default client\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n// import type '@material-ui/lab/themeAugmentation'\n\nimport red from '@material-ui/core/colors/red'\nimport grey from '@material-ui/core/colors/grey'\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: red[300],\n      main: red[600],\n      dark: red[700],\n    },\n    secondary: {\n      light: grey[300],\n      main: grey[800],\n      dark: grey[900],\n    },\n    error: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n    typography: {\n      // fontFamily: 'Roboto',\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      fontSize: 34,\n      useNextVariants: true,\n      htmlFontSize: 10,\n    },\n  },\n})\n\ntheme = responsiveFontSizes(theme)\n\nexport default theme\n","import React from 'react'\n\nimport { AmplifyAuthenticator, AmplifySignIn } from '@aws-amplify/ui-react'\nimport { ApolloProvider } from '@apollo/client'\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { Helmet } from 'react-helmet'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport Amplify from 'aws-amplify'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { Alerts, AlertProvider } from './modules/Base/Alert'\nimport { Dashboard } from './modules/Base/Dashboard'\nimport { Dips } from './modules/Dips'\nimport { ErrorAlert } from './modules/Base/Errors'\nimport { getTitle } from './utils'\nimport { Header } from './modules/Base/Header'\nimport { Import } from './modules/Import'\nimport { NoMatch } from './modules/Base/NoMatch'\nimport { Propane } from './modules/Propane'\nimport { Reports } from './modules/Reports'\nimport { setToken } from './utils'\nimport { useUserDispatch } from './modules/Base/User/UserContext'\nimport awsExports from './config/aws-exports'\nimport client from './apollo'\nimport theme from './style/theme'\n\nAmplify.configure(awsExports)\n\nexport const App: React.FunctionComponent = () => {\n  const [authState, setAuthState] = React.useState<AuthState>()\n\n  /**\n   * TODO: Consider refactoring with better types\n   * The declaration below using 'object | undefined' is the recommended approach by amplify\n   * see: https://docs.amplify.aws/ui/auth/authenticator/q/framework/react#use-cases\n   * However it does cause typescript errors when attempting to access the values and also since some of the values\n   * are nested in a secondary object, I just went with the 'any' types\n   * see: https://stackoverflow.com/questions/36607979/how-to-get-around-property-does-not-exist-on-object/45090885\n   * and: https://stackoverflow.com/questions/43338763/typescript-property-does-not-exist-on-type-object\n   */\n\n  const [authData, setAuthData] = React.useState<any | undefined>() // eslint-disable-line @typescript-eslint/no-explicit-any\n  const userDispatch = useUserDispatch()\n\n  React.useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      setAuthState(nextAuthState)\n      setAuthData(authData)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    if (authState === 'signedin' && authData?.username) {\n      const USER = {\n        username: authData.username,\n        name: authData.attributes.name,\n        email: authData.attributes.email,\n        isLoggedIn: true,\n      }\n      setToken(authData)\n      userDispatch(USER)\n    }\n  }, [authState, userDispatch, authData])\n\n  return authState === AuthState.SignedIn && authData ? (\n    <ApolloProvider client={client}>\n      <Helmet>\n        <title>{getTitle()}</title>\n      </Helmet>\n      <ThemeProvider theme={theme}>\n        <AlertProvider>\n          <Router>\n            <Alerts />\n            <Header />\n            <ErrorBoundary FallbackComponent={ErrorAlert}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Switch>\n                  <Route component={Dashboard} exact path='/' />\n                  <Route component={Dips} exact path='/dips' />\n                  <Route component={Dips} path='/dips/:date/:stationID' />\n                  <Route component={Propane} exact path='/propane' />\n                  <Route component={Reports} exact path='/reports' />\n                  <Route component={Import} exact path='/import-data' />\n                  <Route component={NoMatch} path='*' />\n                </Switch>\n              </MuiPickersUtilsProvider>\n            </ErrorBoundary>\n          </Router>\n        </AlertProvider>\n      </ThemeProvider>\n    </ApolloProvider>\n  ) : (\n    <AmplifyAuthenticator style={{ borderRadius: 'green' }}>\n      <AmplifySignIn slot='sign-in' hideSignUp={true} />\n    </AmplifyAuthenticator>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): ReportHandler | void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { UserProvider } from './modules/Base/User/UserContext'\n\nReactDOM.render(\n  <UserProvider>\n    <App />,\n  </UserProvider>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}